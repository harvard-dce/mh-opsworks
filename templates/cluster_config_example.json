{
  "region": "us-east-1",
  "vpc": {
    "cidr_block": "FILL_ME_IN - e.g. 10.1.1.0/24",
    "public_cidr_block": "FILL_ME_IN - e.g. 10.1.1.0/26",
    "private_cidr_block": "FILL_ME_IN - e.g. 10.1.1.64/26",
    "_cidr_block_comment": "10.1.1.0/24 gives you 254 ips"
  },
  "stack": {
    "name": "FILL_ME_IN",
    "shortname": "FILL_ME_IN - only lowercase letters, digits and hyphens",
    "default_ssh_key_name":"",
    "chef": {
      "custom_json": {
        "shared_asset_bucket_name": "FILL_ME_IN: e.g. mh-opsworks-shared-assets",
        "matterhorn_repo_root": "/opt/matterhorn",
        "local_workspace_root": "/var/matterhorn-workspace",
        "capture_agent_query_url": "http://example.com/captureAgentLocations.json",
        "smtp_auth": {
          "_default_email_sender_comment": "If you're using SES, you must verify the address below in the SES console to ensure messages can be delivered.",
          "default_email_sender": "no-reply@dce.harvard.edu",
          "relay_host": "email.us-east-1.amazonaws.com",
          "username": "FILL_ME_IN: SES username",
          "password": "FILL_ME_IN: SES password"
        },
        "rest_auth": {
          "user": "username",
          "pass": "password"
        },
        "admin_auth": {
          "user": "admin",
          "pass": "murkwood"
        },
        "storage": {
          "export_root": "/var/matterhorn",
          "network": "10.1.1.0/24 FILL_ME_IN - this should match your cidr_block above",
          "layer_shortname": "storage"
        },
        "user_tracking_authhost": "example.com"
      },
      "custom_cookbooks_source": {
        "type": "git",
        "url": "https://github.com/harvard-dce/mh-opsworks-recipes",
        "revision": "master"
      }
    },
    "layers": [
      {
        "name": "Storage",
        "shortname": "storage",
        "type": "custom",
        "enable_auto_healing": true,
        "install_updates_on_boot": true,
        "use_ebs_optimized_instances": true,
        "custom_recipes": {
          "setup": [
            "mh-opsworks-recipes::set-timezone",
            "mh-opsworks-recipes::fix-raid-mapping",
            "mh-opsworks-recipes::set-bash-as-default-shell",
            "mh-opsworks-recipes::install-utils",
            "mh-opsworks-recipes::create-matterhorn-user",
            "mh-opsworks-recipes::nfs-export",
            "mh-opsworks-recipes::enable-postfix-smarthost",
            "mh-opsworks-recipes::clean-up-package-cache"
          ]
        },
        "volume_configurations": [
          {
            "mount_point": "/var/matterhorn",
            "raid_level": 0,
            "number_of_disks": 2,
            "size": "20",
            "volume_type": "gp2"
          }
        ],
        "instances": {
          "number_of_instances": 1,
          "instance_type": "t2.medium",
          "root_device_type": "ebs"
        }
      },
      {
        "name": "MySQL db",
        "shortname": "db-master",
        "enable_auto_healing": true,
        "install_updates_on_boot": true,
        "type": "db-master",
        "use_ebs_optimized_instances": true,
        "attributes": {
          "MysqlRootPasswordUbiquitous": "true"
        },
        "custom_recipes": {
          "setup": [
            "mh-opsworks-recipes::set-timezone",
            "mh-opsworks-recipes::fix-raid-mapping",
            "mh-opsworks-recipes::set-bash-as-default-shell",
            "mh-opsworks-recipes::install-utils",
            "mh-opsworks-recipes::create-matterhorn-user",
            "mh-opsworks-recipes::install-deploy-key",
            "mh-opsworks-recipes::enable-postfix-smarthost",
            "mh-opsworks-recipes::clean-up-package-cache"
          ],
          "deploy": [
            "mh-opsworks-recipes::deploy-database"
          ]
        },
        "volume_configurations": [
          {
            "mount_point": "/vol/mysql",
            "raid_level": 1,
            "number_of_disks": 2,
            "size": "10",
            "volume_type": "gp2"
          }
        ],
        "instances": {
          "number_of_instances": 1,
          "instance_type": "t2.medium",
          "root_device_type": "ebs"
        }
      },
      {
        "name": "Admin",
        "shortname": "admin",
        "type": "custom",
        "enable_auto_healing": true,
        "auto_assign_elastic_ips": true,
        "install_updates_on_boot": true,
        "auto_assign_public_ips": true,
        "custom_recipes": {
          "setup": [
            "mh-opsworks-recipes::set-timezone",
            "mh-opsworks-recipes::fix-raid-mapping",
            "mh-opsworks-recipes::set-bash-as-default-shell",
            "mh-opsworks-recipes::install-utils",
            "mh-opsworks-recipes::populate-maven-cache",
            "mh-opsworks-recipes::install-mh-base-packages",
            "mh-opsworks-recipes::create-matterhorn-user",
            "mh-opsworks-recipes::install-deploy-key",
            "mh-opsworks-recipes::nfs-client",
            "mh-opsworks-recipes::enable-postfix-smarthost",
            "mh-opsworks-recipes::configure-nginx-proxy",
            "mh-opsworks-recipes::install-ffmpeg",
            "mh-opsworks-recipes::clean-up-package-cache"
          ],
          "configure": [
            "mh-opsworks-recipes::update-host-based-configurations",
            "mh-opsworks-recipes::update-nginx-config-for-ganglia"
          ],
          "deploy": [
            "mh-opsworks-recipes::deploy-admin"
          ]
        },
        "volume_configurations": [
          {
            "mount_point": "/var/matterhorn-workspace",
            "number_of_disks": 1,
            "size": "10",
            "volume_type": "gp2"
          }
        ],
        "instances": {
          "number_of_instances": 1,
          "instance_type": "t2.medium",
          "root_device_type": "ebs"
        }
      },
      {
        "name": "Workers",
        "shortname": "workers",
        "type": "custom",
        "enable_auto_healing": true,
        "install_updates_on_boot": true,
        "custom_recipes": {
          "setup": [
            "mh-opsworks-recipes::set-timezone",
            "mh-opsworks-recipes::fix-raid-mapping",
            "mh-opsworks-recipes::set-bash-as-default-shell",
            "mh-opsworks-recipes::install-utils",
            "mh-opsworks-recipes::populate-maven-cache",
            "mh-opsworks-recipes::install-mh-base-packages",
            "mh-opsworks-recipes::create-matterhorn-user",
            "mh-opsworks-recipes::install-deploy-key",
            "mh-opsworks-recipes::enable-postfix-smarthost",
            "mh-opsworks-recipes::nfs-client",
            "mh-opsworks-recipes::configure-nginx-proxy",
            "mh-opsworks-recipes::install-ffmpeg",
            "mh-opsworks-recipes::clean-up-package-cache"
          ],
          "configure": [
            "mh-opsworks-recipes::update-host-based-configurations"
          ],
          "deploy": [
            "mh-opsworks-recipes::deploy-worker"
          ]
        },
        "volume_configurations": [
          {
            "mount_point": "/var/matterhorn-workspace",
            "number_of_disks": 1,
            "size": "10",
            "volume_type": "gp2"
          }
        ],
        "instances": {
          "number_of_instances": 2,
          "instance_type": "t2.medium",
          "root_device_type": "ebs"
        }
      },
      {
        "name": "Engage",
        "shortname": "engage",
        "type": "custom",
        "enable_auto_healing": true,
        "auto_assign_elastic_ips": true,
        "install_updates_on_boot": true,
        "auto_assign_public_ips": true,
        "custom_recipes": {
          "setup": [
            "mh-opsworks-recipes::set-timezone",
            "mh-opsworks-recipes::fix-raid-mapping",
            "mh-opsworks-recipes::set-bash-as-default-shell",
            "mh-opsworks-recipes::install-utils",
            "mh-opsworks-recipes::populate-maven-cache",
            "mh-opsworks-recipes::install-mh-base-packages",
            "mh-opsworks-recipes::create-matterhorn-user",
            "mh-opsworks-recipes::install-deploy-key",
            "mh-opsworks-recipes::enable-postfix-smarthost",
            "mh-opsworks-recipes::nfs-client",
            "mh-opsworks-recipes::install-ffmpeg",
            "mh-opsworks-recipes::configure-nginx-proxy",
            "mh-opsworks-recipes::clean-up-package-cache"
          ],
          "configure": [
            "mh-opsworks-recipes::update-host-based-configurations"
          ],
          "deploy": [
            "mh-opsworks-recipes::deploy-engage"
          ]
        },
        "volume_configurations": [
          {
            "mount_point": "/var/matterhorn-workspace",
            "number_of_disks": 1,
            "size": "10",
            "volume_type": "gp2"
          }
        ],
        "instances": {
          "number_of_instances": 1,
          "instance_type": "t2.medium",
          "root_device_type": "ebs"
        }
      },
      {
        "name": "Ganglia",
        "shortname": "monitoring-master",
        "enable_auto_healing": true,
        "install_updates_on_boot": true,
        "type": "monitoring-master",
        "auto_assign_public_ips": false,
        "use_ebs_optimized_instances": true,
        "attributes": {
          "GangliaUrl": "/ganglia",
          "GangliaUser": "FILL_ME_IN",
          "GangliaPassword": "FILL_ME_IN"
        },
        "custom_recipes": {
          "setup": [
            "mh-opsworks-recipes::set-timezone",
            "mh-opsworks-recipes::fix-raid-mapping",
            "mh-opsworks-recipes::set-bash-as-default-shell",
            "mh-opsworks-recipes::install-utils",
            "mh-opsworks-recipes::enable-postfix-smarthost",
            "mh-opsworks-recipes::clean-up-package-cache"
          ]
        },
        "volume_configurations": [
          {
            "mount_point": "/vol/ganglia",
            "number_of_disks": 1,
            "size": "10",
            "volume_type": "gp2"
          }
        ],
        "instances": {
          "number_of_instances": 1,
          "instance_type": "t2.small",
          "root_device_type": "ebs"
        }
      }
    ],
    "app": {
      "shortname": "matterhorn",
      "name": "Matterhorn",
      "type": "other",
      "deployment": {
        "to_layers": ["Admin", "Engage", "Workers", "MySQL db"],
        "custom_json": { }
      },
      "app_source": {
        "type": "git",
        "url": "git@github.com:/blahblah FILL_ME_IN",
        "revision": "FILL_ME_IN"
      }
    },
    "users": [
      {
        "user_name": "FILL_ME_IN",
        "level": "FILL_ME_IN: one of: deny show deploy manage iam_only",
        "allow_ssh": true,
        "allow_sudo": true,
        "ssh_public_key": "The public key for this user"
      }
    ]
  }
}
